// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class createdAuction extends ethereum.Event {
  get params(): createdAuction__Params {
    return new createdAuction__Params(this);
  }
}

export class createdAuction__Params {
  _event: createdAuction;

  constructor(event: createdAuction) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAuction(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get title(): string {
    return this._event.parameters[2].value.toString();
  }

  get maxOffer(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get submissionDeadline(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get startDate(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get endDate(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class AuctionFactory extends ethereum.SmartContract {
  static bind(address: Address): AuctionFactory {
    return new AuctionFactory("AuctionFactory", address);
  }

  AUCTION_PERIOD(): BigInt {
    let result = super.call("AUCTION_PERIOD", "AUCTION_PERIOD():(uint256)", []);

    return result[0].toBigInt();
  }

  try_AUCTION_PERIOD(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "AUCTION_PERIOD",
      "AUCTION_PERIOD():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  deployedAuctions(param0: BigInt): Address {
    let result = super.call(
      "deployedAuctions",
      "deployedAuctions(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toAddress();
  }

  try_deployedAuctions(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "deployedAuctions",
      "deployedAuctions(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getDeployedAuctions(): Array<Address> {
    let result = super.call(
      "getDeployedAuctions",
      "getDeployedAuctions():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getDeployedAuctions(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getDeployedAuctions",
      "getDeployedAuctions():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }
}

export class CreateAuctionCall extends ethereum.Call {
  get inputs(): CreateAuctionCall__Inputs {
    return new CreateAuctionCall__Inputs(this);
  }

  get outputs(): CreateAuctionCall__Outputs {
    return new CreateAuctionCall__Outputs(this);
  }
}

export class CreateAuctionCall__Inputs {
  _call: CreateAuctionCall;

  constructor(call: CreateAuctionCall) {
    this._call = call;
  }

  get title(): string {
    return this._call.inputValues[0].value.toString();
  }

  get description(): string {
    return this._call.inputValues[1].value.toString();
  }

  get maxOffer(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get submissionDeadline(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get startDate(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class CreateAuctionCall__Outputs {
  _call: CreateAuctionCall;

  constructor(call: CreateAuctionCall) {
    this._call = call;
  }
}
